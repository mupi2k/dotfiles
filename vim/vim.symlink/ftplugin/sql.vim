:iabbr <buffer> abort ABORT
:iabbr <buffer> abs ABS
:iabbr <buffer> absolute ABSOLUTE
:iabbr <buffer> access ACCESS
:iabbr <buffer> action ACTION
:iabbr <buffer> ada ADA
:iabbr <buffer> add ADD
:iabbr <buffer> admin ADMIN
:iabbr <buffer> after AFTER
:iabbr <buffer> aggregate AGGREGATE
:iabbr <buffer> alias ALIAS
:iabbr <buffer> all ALL
:iabbr <buffer> allocate ALLOCATE
:iabbr <buffer> also ALSO
:iabbr <buffer> alter ALTER
:iabbr <buffer> always ALWAYS
:iabbr <buffer> analyse ANALYSE
:iabbr <buffer> analyze ANALYZE
:iabbr <buffer> and AND
:iabbr <buffer> any ANY
:iabbr <buffer> are ARE
:iabbr <buffer> array ARRAY
:iabbr <buffer> as AS
:iabbr <buffer> asc ASC
:iabbr <buffer> asensitive ASENSITIVE
:iabbr <buffer> assertion ASSERTION
:iabbr <buffer> assignment ASSIGNMENT
:iabbr <buffer> asymmetric ASYMMETRIC
:iabbr <buffer> at AT
:iabbr <buffer> atomic ATOMIC
:iabbr <buffer> attribute ATTRIBUTE
:iabbr <buffer> attributes ATTRIBUTES
:iabbr <buffer> authorization AUTHORIZATION
:iabbr <buffer> avg AVG
:iabbr <buffer> backward BACKWARD
:iabbr <buffer> before BEFORE
:iabbr <buffer> begin BEGIN
:iabbr <buffer> bernoulli BERNOULLI
:iabbr <buffer> between BETWEEN
:iabbr <buffer> bigint BIGINT
:iabbr <buffer> binary BINARY
:iabbr <buffer> bit BIT
:iabbr <buffer> bitvar BITVAR
:iabbr <buffer> bit_length BIT_LENGTH
:iabbr <buffer> blob BLOB
:iabbr <buffer> boolean BOOLEAN
:iabbr <buffer> both BOTH
:iabbr <buffer> breadth BREADTH
:iabbr <buffer> by BY
:iabbr <buffer> cache CACHE
:iabbr <buffer> call CALL
:iabbr <buffer> called CALLED
:iabbr <buffer> cardinality CARDINALITY
:iabbr <buffer> cascade CASCADE
:iabbr <buffer> cascaded CASCADED
:iabbr <buffer> case CASE
:iabbr <buffer> cast CAST
:iabbr <buffer> catalog CATALOG
:iabbr <buffer> catalog_name CATALOG_NAME
:iabbr <buffer> ceil CEIL
:iabbr <buffer> ceiling CEILING
:iabbr <buffer> chain CHAIN
:iabbr <buffer> char CHAR
:iabbr <buffer> character CHARACTER
:iabbr <buffer> characteristics CHARACTERISTICS
:iabbr <buffer> characters CHARACTERS
:iabbr <buffer> character_length CHARACTER_LENGTH
:iabbr <buffer> character_set_catalog CHARACTER_SET_CATALOG
:iabbr <buffer> character_set_name CHARACTER_SET_NAME
:iabbr <buffer> character_set_schema CHARACTER_SET_SCHEMA
:iabbr <buffer> char_length CHAR_LENGTH
:iabbr <buffer> check CHECK
:iabbr <buffer> checked CHECKED
:iabbr <buffer> checkpoint CHECKPOINT
:iabbr <buffer> class CLASS
:iabbr <buffer> class_origin CLASS_ORIGIN
:iabbr <buffer> clob CLOB
:iabbr <buffer> close CLOSE
:iabbr <buffer> cluster CLUSTER
:iabbr <buffer> coalesce COALESCE
:iabbr <buffer> cobol COBOL
:iabbr <buffer> collate COLLATE
:iabbr <buffer> collation COLLATION
:iabbr <buffer> collation_catalog COLLATION_CATALOG
:iabbr <buffer> collation_name COLLATION_NAME
:iabbr <buffer> collation_schema COLLATION_SCHEMA
:iabbr <buffer> collect COLLECT
:iabbr <buffer> column COLUMN
:iabbr <buffer> column_name COLUMN_NAME
:iabbr <buffer> command_function COMMAND_FUNCTION
:iabbr <buffer> command_function_code COMMAND_FUNCTION_CODE
:iabbr <buffer> comment COMMENT
:iabbr <buffer> commit COMMIT
:iabbr <buffer> committed COMMITTED
:iabbr <buffer> completion COMPLETION
:iabbr <buffer> condition CONDITION
:iabbr <buffer> condition_number CONDITION_NUMBER
:iabbr <buffer> connect CONNECT
:iabbr <buffer> connection CONNECTION
:iabbr <buffer> connection_name CONNECTION_NAME
:iabbr <buffer> constraint CONSTRAINT
:iabbr <buffer> constraints CONSTRAINTS
:iabbr <buffer> constraint_catalog CONSTRAINT_CATALOG
:iabbr <buffer> constraint_name CONSTRAINT_NAME
:iabbr <buffer> constraint_schema CONSTRAINT_SCHEMA
:iabbr <buffer> constructor CONSTRUCTOR
:iabbr <buffer> contains CONTAINS
:iabbr <buffer> continue CONTINUE
:iabbr <buffer> conversion CONVERSION
:iabbr <buffer> convert CONVERT
:iabbr <buffer> copy COPY
:iabbr <buffer> corr CORR
:iabbr <buffer> corresponding CORRESPONDING
:iabbr <buffer> count COUNT
:iabbr <buffer> covar_pop COVAR_POP
:iabbr <buffer> covar_samp COVAR_SAMP
:iabbr <buffer> create CREATE
:iabbr <buffer> createdb CREATEDB
:iabbr <buffer> createrole CREATEROLE
:iabbr <buffer> createuser CREATEUSER
:iabbr <buffer> cross CROSS
:iabbr <buffer> csv CSV
:iabbr <buffer> cube CUBE
:iabbr <buffer> cume_dist CUME_DIST
:iabbr <buffer> current CURRENT
:iabbr <buffer> current_date CURRENT_DATE
:iabbr <buffer> current_default_transform_group CURRENT_DEFAULT_TRANSFORM_GROUP
:iabbr <buffer> current_path CURRENT_PATH
:iabbr <buffer> current_role CURRENT_ROLE
:iabbr <buffer> current_time CURRENT_TIME
:iabbr <buffer> current_timestamp CURRENT_TIMESTAMP
:iabbr <buffer> current_transform_group_for_type CURRENT_TRANSFORM_GROUP_FOR_TYPE
:iabbr <buffer> current_user CURRENT_USER
:iabbr <buffer> cursor CURSOR
:iabbr <buffer> cursor_name CURSOR_NAME
:iabbr <buffer> cycle CYCLE
:iabbr <buffer> data DATA
:iabbr <buffer> database DATABASE
:iabbr <buffer> date DATE
:iabbr <buffer> datetime_interval_code DATETIME_INTERVAL_CODE
:iabbr <buffer> datetime_interval_precision DATETIME_INTERVAL_PRECISION
:iabbr <buffer> day DAY
:iabbr <buffer> deallocate DEALLOCATE
:iabbr <buffer> dec DEC
:iabbr <buffer> decimal DECIMAL
:iabbr <buffer> declare DECLARE
:iabbr <buffer> default DEFAULT
:iabbr <buffer> defaults DEFAULTS
:iabbr <buffer> deferrable DEFERRABLE
:iabbr <buffer> deferred DEFERRED
:iabbr <buffer> defined DEFINED
:iabbr <buffer> definer DEFINER
:iabbr <buffer> degree DEGREE
:iabbr <buffer> delete DELETE
:iabbr <buffer> delimiter DELIMITER
:iabbr <buffer> delimiters DELIMITERS
:iabbr <buffer> dense_rank DENSE_RANK
:iabbr <buffer> depth DEPTH
:iabbr <buffer> deref DEREF
:iabbr <buffer> derived DERIVED
:iabbr <buffer> desc DESC
:iabbr <buffer> describe DESCRIBE
:iabbr <buffer> descriptor DESCRIPTOR
:iabbr <buffer> destroy DESTROY
:iabbr <buffer> destructor DESTRUCTOR
:iabbr <buffer> deterministic DETERMINISTIC
:iabbr <buffer> diagnostics DIAGNOSTICS
:iabbr <buffer> dictionary DICTIONARY
:iabbr <buffer> disable DISABLE
:iabbr <buffer> disconnect DISCONNECT
:iabbr <buffer> dispatch DISPATCH
:iabbr <buffer> distinct DISTINCT
:iabbr <buffer> do DO
:iabbr <buffer> domain DOMAIN
:iabbr <buffer> double DOUBLE
:iabbr <buffer> drop DROP
:iabbr <buffer> dynamic DYNAMIC
:iabbr <buffer> dynamic_function DYNAMIC_FUNCTION
:iabbr <buffer> dynamic_function_code DYNAMIC_FUNCTION_CODE
:iabbr <buffer> each EACH
:iabbr <buffer> element ELEMENT
:iabbr <buffer> else ELSE
:iabbr <buffer> enable ENABLE
:iabbr <buffer> encoding ENCODING
:iabbr <buffer> encrypted ENCRYPTED
:iabbr <buffer> end END
:iabbr <buffer> end END-EXEC
:iabbr <buffer> equals EQUALS
:iabbr <buffer> escape ESCAPE
:iabbr <buffer> every EVERY
:iabbr <buffer> except EXCEPT
:iabbr <buffer> exception EXCEPTION
:iabbr <buffer> exclude EXCLUDE
:iabbr <buffer> excluding EXCLUDING
:iabbr <buffer> exclusive EXCLUSIVE
:iabbr <buffer> exec EXEC
:iabbr <buffer> execute EXECUTE
:iabbr <buffer> existing EXISTING
:iabbr <buffer> exists EXISTS
:iabbr <buffer> exp EXP
:iabbr <buffer> explain EXPLAIN
:iabbr <buffer> external EXTERNAL
:iabbr <buffer> extract EXTRACT
:iabbr <buffer> false FALSE
:iabbr <buffer> fetch FETCH
:iabbr <buffer> filter FILTER
:iabbr <buffer> final FINAL
:iabbr <buffer> first FIRST
:iabbr <buffer> float FLOAT
:iabbr <buffer> floor FLOOR
:iabbr <buffer> following FOLLOWING
:iabbr <buffer> for FOR
:iabbr <buffer> foreign FOREIGN
:iabbr <buffer> fortran FORTRAN
:iabbr <buffer> forward FORWARD
:iabbr <buffer> found FOUND
:iabbr <buffer> free FREE
:iabbr <buffer> freeze FREEZE
:iabbr <buffer> from FROM
:iabbr <buffer> full FULL
:iabbr <buffer> function FUNCTION
:iabbr <buffer> fusion FUSION
:iabbr <buffer> general GENERAL
:iabbr <buffer> generated GENERATED
:iabbr <buffer> get GET
:iabbr <buffer> global GLOBAL
:iabbr <buffer> go GO
:iabbr <buffer> goto GOTO
:iabbr <buffer> grant GRANT
:iabbr <buffer> granted GRANTED
:iabbr <buffer> greatest GREATEST
:iabbr <buffer> group GROUP
:iabbr <buffer> grouping GROUPING
:iabbr <buffer> handler HANDLER
:iabbr <buffer> having HAVING
:iabbr <buffer> header HEADER
:iabbr <buffer> hierarchy HIERARCHY
:iabbr <buffer> hold HOLD
:iabbr <buffer> host HOST
:iabbr <buffer> hour HOUR
:iabbr <buffer> identity IDENTITY
:iabbr <buffer> ignore IGNORE
:iabbr <buffer> ilike ILIKE
:iabbr <buffer> immediate IMMEDIATE
:iabbr <buffer> immutable IMMUTABLE
:iabbr <buffer> implementation IMPLEMENTATION
:iabbr <buffer> implicit IMPLICIT
:iabbr <buffer> in IN
:iabbr <buffer> including INCLUDING
:iabbr <buffer> increment INCREMENT
:iabbr <buffer> index INDEX
:iabbr <buffer> indicator INDICATOR
:iabbr <buffer> infix INFIX
:iabbr <buffer> inherit INHERIT
:iabbr <buffer> inherits INHERITS
:iabbr <buffer> initialize INITIALIZE
:iabbr <buffer> initially INITIALLY
:iabbr <buffer> inner INNER
:iabbr <buffer> inout INOUT
:iabbr <buffer> input INPUT
:iabbr <buffer> insensitive INSENSITIVE
:iabbr <buffer> insert INSERT
:iabbr <buffer> instance INSTANCE
:iabbr <buffer> instantiable INSTANTIABLE
:iabbr <buffer> instead INSTEAD
:iabbr <buffer> int INT
:iabbr <buffer> integer INTEGER
:iabbr <buffer> intersect INTERSECT
:iabbr <buffer> intersection INTERSECTION
:iabbr <buffer> interval INTERVAL
:iabbr <buffer> into INTO
:iabbr <buffer> invoker INVOKER
:iabbr <buffer> is IS
:iabbr <buffer> isnull ISNULL
:iabbr <buffer> isolation ISOLATION
:iabbr <buffer> iterate ITERATE
:iabbr <buffer> join JOIN
:iabbr <buffer> key_member KEY_MEMBER
:iabbr <buffer> key_type KEY_TYPE
:iabbr <buffer> lancompiler LANCOMPILER
:iabbr <buffer> language LANGUAGE
:iabbr <buffer> large LARGE
:iabbr <buffer> last LAST
:iabbr <buffer> lateral LATERAL
:iabbr <buffer> leading LEADING
:iabbr <buffer> least LEAST
:iabbr <buffer> left LEFT
:iabbr <buffer> length LENGTH
:iabbr <buffer> less LESS
:iabbr <buffer> level LEVEL
:iabbr <buffer> like LIKE
:iabbr <buffer> limit LIMIT
:iabbr <buffer> listen LISTEN
:iabbr <buffer> ln LN
:iabbr <buffer> load LOAD
:iabbr <buffer> local LOCAL
:iabbr <buffer> localtime LOCALTIME
:iabbr <buffer> localtimestamp LOCALTIMESTAMP
:iabbr <buffer> location LOCATION
:iabbr <buffer> locator LOCATOR
:iabbr <buffer> lock LOCK
:iabbr <buffer> login LOGIN
:iabbr <buffer> lower LOWER
:iabbr <buffer> map MAP
:iabbr <buffer> match MATCH
:iabbr <buffer> matched MATCHED
:iabbr <buffer> max MAX
:iabbr <buffer> maxvalue MAXVALUE
:iabbr <buffer> member MEMBER
:iabbr <buffer> merge MERGE
:iabbr <buffer> message_length MESSAGE_LENGTH
:iabbr <buffer> message_octet_length MESSAGE_OCTET_LENGTH
:iabbr <buffer> message_text MESSAGE_TEXT
:iabbr <buffer> method METHOD
:iabbr <buffer> min MIN
:iabbr <buffer> minute MINUTE
:iabbr <buffer> minvalue MINVALUE
:iabbr <buffer> mod MOD
:iabbr <buffer> mode MODE
:iabbr <buffer> modifies MODIFIES
:iabbr <buffer> modify MODIFY
:iabbr <buffer> module MODULE
:iabbr <buffer> month MONTH
:iabbr <buffer> more MORE
:iabbr <buffer> move MOVE
:iabbr <buffer> multiset MULTISET
:iabbr <buffer> mumps MUMPS
:iabbr <buffer> name NAME
:iabbr <buffer> names NAMES
:iabbr <buffer> national NATIONAL
:iabbr <buffer> natural NATURAL
:iabbr <buffer> nchar NCHAR
:iabbr <buffer> nclob NCLOB
:iabbr <buffer> nesting NESTING
:iabbr <buffer> new NEW
:iabbr <buffer> next NEXT
:iabbr <buffer> no NO
:iabbr <buffer> nocreatedb NOCREATEDB
:iabbr <buffer> nocreaterole NOCREATEROLE
:iabbr <buffer> nocreateuser NOCREATEUSER
:iabbr <buffer> noinherit NOINHERIT
:iabbr <buffer> nologin NOLOGIN
:iabbr <buffer> none NONE
:iabbr <buffer> normalize NORMALIZE
:iabbr <buffer> normalized NORMALIZED
:iabbr <buffer> nosuperuser NOSUPERUSER
:iabbr <buffer> not NOT
:iabbr <buffer> nothing NOTHING
:iabbr <buffer> notify NOTIFY
:iabbr <buffer> notnull NOTNULL
:iabbr <buffer> nowait NOWAIT
:iabbr <buffer> null NULL
:iabbr <buffer> nullable NULLABLE
:iabbr <buffer> nullif NULLIF
:iabbr <buffer> nulls NULLS
:iabbr <buffer> number NUMBER
:iabbr <buffer> numeric NUMERIC
:iabbr <buffer> object OBJECT
:iabbr <buffer> octets OCTETS
:iabbr <buffer> octet_length OCTET_LENGTH
:iabbr <buffer> of OF
:iabbr <buffer> off OFF
:iabbr <buffer> offset OFFSET
:iabbr <buffer> oids OIDS
:iabbr <buffer> old OLD
:iabbr <buffer> on ON
:iabbr <buffer> only ONLY
:iabbr <buffer> open OPEN
:iabbr <buffer> operation OPERATION
:iabbr <buffer> operator OPERATOR
:iabbr <buffer> option OPTION
:iabbr <buffer> options OPTIONS
:iabbr <buffer> or OR
:iabbr <buffer> order ORDER
:iabbr <buffer> ordering ORDERING
:iabbr <buffer> ordinality ORDINALITY
:iabbr <buffer> others OTHERS
:iabbr <buffer> out OUT
:iabbr <buffer> outer OUTER
:iabbr <buffer> output OUTPUT
:iabbr <buffer> over OVER
:iabbr <buffer> overlaps OVERLAPS
:iabbr <buffer> overlay OVERLAY
:iabbr <buffer> overriding OVERRIDING
:iabbr <buffer> owner OWNER
:iabbr <buffer> pad PAD
:iabbr <buffer> parameter PARAMETER
:iabbr <buffer> parameters PARAMETERS
:iabbr <buffer> parameter_mode PARAMETER_MODE
:iabbr <buffer> parameter_name PARAMETER_NAME
:iabbr <buffer> parameter_ordinal_position PARAMETER_ORDINAL_POSITION
:iabbr <buffer> parameter_specific_catalog PARAMETER_SPECIFIC_CATALOG
:iabbr <buffer> parameter_specific_name PARAMETER_SPECIFIC_NAME
:iabbr <buffer> parameter_specific_schema PARAMETER_SPECIFIC_SCHEMA
:iabbr <buffer> partial PARTIAL
:iabbr <buffer> partition PARTITION
:iabbr <buffer> pascal PASCAL
:iabbr <buffer> path PATH
:iabbr <buffer> percentile_cont PERCENTILE_CONT
:iabbr <buffer> percentile_disc PERCENTILE_DISC
:iabbr <buffer> percent_rank PERCENT_RANK
:iabbr <buffer> placing PLACING
:iabbr <buffer> pli PLI
:iabbr <buffer> position POSITION
:iabbr <buffer> postfix POSTFIX
:iabbr <buffer> power POWER
:iabbr <buffer> preceding PRECEDING
:iabbr <buffer> precision PRECISION
:iabbr <buffer> prefix PREFIX
:iabbr <buffer> preorder PREORDER
:iabbr <buffer> prepare PREPARE
:iabbr <buffer> prepared PREPARED
:iabbr <buffer> preserve PRESERVE
:iabbr <buffer> primary PRIMARY
:iabbr <buffer> prior PRIOR
:iabbr <buffer> privileges PRIVILEGES
:iabbr <buffer> procedural PROCEDURAL
:iabbr <buffer> procedure PROCEDURE
:iabbr <buffer> public PUBLIC
:iabbr <buffer> quote QUOTE
:iabbr <buffer> range RANGE
:iabbr <buffer> rank RANK
:iabbr <buffer> read READ
:iabbr <buffer> reads READS
:iabbr <buffer> real REAL
:iabbr <buffer> recheck RECHECK
:iabbr <buffer> recursive RECURSIVE
:iabbr <buffer> ref REF
:iabbr <buffer> references REFERENCES
:iabbr <buffer> referencing REFERENCING
:iabbr <buffer> regr_avgx REGR_AVGX
:iabbr <buffer> regr_avgy REGR_AVGY
:iabbr <buffer> regr_count REGR_COUNT
:iabbr <buffer> regr_intercept REGR_INTERCEPT
:iabbr <buffer> regr_r2 REGR_R2
:iabbr <buffer> regr_slope REGR_SLOPE
:iabbr <buffer> regr_sxx REGR_SXX
:iabbr <buffer> regr_sxy REGR_SXY
:iabbr <buffer> regr_syy REGR_SYY
:iabbr <buffer> reindex REINDEX
:iabbr <buffer> relative RELATIVE
:iabbr <buffer> release RELEASE
:iabbr <buffer> rename RENAME
:iabbr <buffer> repeatable REPEATABLE
:iabbr <buffer> replace REPLACE
:iabbr <buffer> reset RESET
:iabbr <buffer> restart RESTART
:iabbr <buffer> restrict RESTRICT
:iabbr <buffer> result RESULT
:iabbr <buffer> return RETURN
:iabbr <buffer> returned_cardinality RETURNED_CARDINALITY
:iabbr <buffer> returned_length RETURNED_LENGTH
:iabbr <buffer> returned_octet_length RETURNED_OCTET_LENGTH
:iabbr <buffer> returned_sqlstate RETURNED_SQLSTATE
:iabbr <buffer> returns RETURNS
:iabbr <buffer> revoke REVOKE
:iabbr <buffer> right RIGHT
:iabbr <buffer> role ROLE
:iabbr <buffer> rollback ROLLBACK
:iabbr <buffer> rollup ROLLUP
:iabbr <buffer> routine ROUTINE
:iabbr <buffer> routine_catalog ROUTINE_CATALOG
:iabbr <buffer> routine_name ROUTINE_NAME
:iabbr <buffer> routine_schema ROUTINE_SCHEMA
:iabbr <buffer> row ROW
:iabbr <buffer> rows ROWS
:iabbr <buffer> row_count ROW_COUNT
:iabbr <buffer> row_number ROW_NUMBER
:iabbr <buffer> rule RULE
:iabbr <buffer> savepoint SAVEPOINT
:iabbr <buffer> scale SCALE
:iabbr <buffer> schema SCHEMA
:iabbr <buffer> schema_name SCHEMA_NAME
:iabbr <buffer> scope SCOPE
:iabbr <buffer> scope_catalog SCOPE_CATALOG
:iabbr <buffer> scope_name SCOPE_NAME
:iabbr <buffer> scope_schema SCOPE_SCHEMA
:iabbr <buffer> scroll SCROLL
:iabbr <buffer> search SEARCH
:iabbr <buffer> second SECOND
:iabbr <buffer> section SECTION
:iabbr <buffer> security SECURITY
:iabbr <buffer> select SELECT
:iabbr <buffer> self SELF
:iabbr <buffer> sensitive SENSITIVE
:iabbr <buffer> sequence SEQUENCE
:iabbr <buffer> serializable SERIALIZABLE
:iabbr <buffer> server_name SERVER_NAME
:iabbr <buffer> session SESSION
:iabbr <buffer> session_user SESSION_USER
:iabbr <buffer> set SET
:iabbr <buffer> setof SETOF
:iabbr <buffer> sets SETS
:iabbr <buffer> show SHOW
:iabbr <buffer> similar SIMILAR
:iabbr <buffer> simple SIMPLE
:iabbr <buffer> size SIZE
:iabbr <buffer> smallint SMALLINT
:iabbr <buffer> some SOME
:iabbr <buffer> source SOURCE
:iabbr <buffer> space SPACE
:iabbr <buffer> specific SPECIFIC
:iabbr <buffer> specifictype SPECIFICTYPE
:iabbr <buffer> specific_name SPECIFIC_NAME
:iabbr <buffer> sql SQL
:iabbr <buffer> sqlcode SQLCODE
:iabbr <buffer> sqlerror SQLERROR
:iabbr <buffer> sqlexception SQLEXCEPTION
:iabbr <buffer> sqlstate SQLSTATE
:iabbr <buffer> sqlwarning SQLWARNING
:iabbr <buffer> sqrt SQRT
:iabbr <buffer> stable STABLE
:iabbr <buffer> start START
:iabbr <buffer> state STATE
:iabbr <buffer> statement STATEMENT
:iabbr <buffer> static STATIC
:iabbr <buffer> statistics STATISTICS
:iabbr <buffer> stddev_pop STDDEV_POP
:iabbr <buffer> stddev_samp STDDEV_SAMP
:iabbr <buffer> stdin STDIN
:iabbr <buffer> stdout STDOUT
:iabbr <buffer> storage STORAGE
:iabbr <buffer> strict STRICT
:iabbr <buffer> structure STRUCTURE
:iabbr <buffer> style STYLE
:iabbr <buffer> subclass_origin SUBCLASS_ORIGIN
:iabbr <buffer> sublist SUBLIST
:iabbr <buffer> submultiset SUBMULTISET
:iabbr <buffer> substring SUBSTRING
:iabbr <buffer> sum SUM
:iabbr <buffer> superuser SUPERUSER
:iabbr <buffer> symmetric SYMMETRIC
:iabbr <buffer> sysid SYSID
:iabbr <buffer> system_user SYSTEM_USER
:iabbr <buffer> table TABLE
:iabbr <buffer> tablesample TABLESAMPLE
:iabbr <buffer> tablespace TABLESPACE
:iabbr <buffer> table_name TABLE_NAME
:iabbr <buffer> temp TEMP
:iabbr <buffer> template TEMPLATE
:iabbr <buffer> temporary TEMPORARY
:iabbr <buffer> terminate TERMINATE
:iabbr <buffer> than THAN
:iabbr <buffer> then THEN
:iabbr <buffer> ties TIES
:iabbr <buffer> time TIME
:iabbr <buffer> timestamp TIMESTAMP
:iabbr <buffer> timezone_hour TIMEZONE_HOUR
:iabbr <buffer> timezone_minute TIMEZONE_MINUTE
:iabbr <buffer> to TO
:iabbr <buffer> toast TOAST
:iabbr <buffer> top_level_count TOP_LEVEL_COUNT
:iabbr <buffer> trailing TRAILING
:iabbr <buffer> transaction TRANSACTION
:iabbr <buffer> transactions_committed TRANSACTIONS_COMMITTED
:iabbr <buffer> transactions_rolled_back TRANSACTIONS_ROLLED_BACK
:iabbr <buffer> transaction_active TRANSACTION_ACTIVE
:iabbr <buffer> transform TRANSFORM
:iabbr <buffer> transforms TRANSFORMS
:iabbr <buffer> translate TRANSLATE
:iabbr <buffer> translation TRANSLATION
:iabbr <buffer> treat TREAT
:iabbr <buffer> trigger TRIGGER
:iabbr <buffer> trigger_catalog TRIGGER_CATALOG
:iabbr <buffer> trigger_name TRIGGER_NAME
:iabbr <buffer> trigger_schema TRIGGER_SCHEMA
:iabbr <buffer> trim TRIM
:iabbr <buffer> true TRUE
:iabbr <buffer> truncate TRUNCATE
:iabbr <buffer> trusted TRUSTED
:iabbr <buffer> type TYPE
:iabbr <buffer> uescape UESCAPE
:iabbr <buffer> unbounded UNBOUNDED
:iabbr <buffer> uncommitted UNCOMMITTED
:iabbr <buffer> under UNDER
:iabbr <buffer> unencrypted UNENCRYPTED
:iabbr <buffer> union UNION
:iabbr <buffer> unique UNIQUE
:iabbr <buffer> unknown UNKNOWN
:iabbr <buffer> unlisten UNLISTEN
:iabbr <buffer> unnamed UNNAMED
:iabbr <buffer> unnest UNNEST
:iabbr <buffer> until UNTIL
:iabbr <buffer> update UPDATE
:iabbr <buffer> upper UPPER
:iabbr <buffer> usage USAGE
:iabbr <buffer> user_defined_type_catalog USER_DEFINED_TYPE_CATALOG
:iabbr <buffer> user_defined_type_code USER_DEFINED_TYPE_CODE
:iabbr <buffer> user_defined_type_name USER_DEFINED_TYPE_NAME
:iabbr <buffer> user_defined_type_schema USER_DEFINED_TYPE_SCHEMA
:iabbr <buffer> using USING
:iabbr <buffer> vacuum VACUUM
:iabbr <buffer> valid VALID
:iabbr <buffer> validator VALIDATOR
:iabbr <buffer> value VALUE
:iabbr <buffer> values VALUES
:iabbr <buffer> varchar VARCHAR
:iabbr <buffer> variable VARIABLE
:iabbr <buffer> varying VARYING
:iabbr <buffer> var_pop VAR_POP
:iabbr <buffer> var_samp VAR_SAMP
:iabbr <buffer> verbose VERBOSE
:iabbr <buffer> view VIEW
:iabbr <buffer> volatile VOLATILE
:iabbr <buffer> when WHEN
:iabbr <buffer> whenever WHENEVER
:iabbr <buffer> where WHERE
:iabbr <buffer> width_bucket WIDTH_BUCKET
:iabbr <buffer> window WINDOW
:iabbr <buffer> with WITH
:iabbr <buffer> within WITHIN
:iabbr <buffer> without WITHOUT
:iabbr <buffer> work WORK
:iabbr <buffer> write WRITE
:iabbr <buffer> year YEAR
:iabbr <buffer> zone ZONE
